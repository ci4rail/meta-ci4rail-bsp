From 6613ac4a1e5941c59aeff1120579486c41149d76 Mon Sep 17 00:00:00 2001
From: Kas User <kas@example.com>
Date: Tue, 11 Jan 2022 15:30:07 +0000
Subject: [PATCH 2/2] fix pcie reset

---
 drivers/pci/controller/dwc/pci-imx6.c | 13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

diff --git a/drivers/pci/controller/dwc/pci-imx6.c b/drivers/pci/controller/dwc/pci-imx6.c
index de1ef0e83609e..c8195411e6c54 100644
--- a/drivers/pci/controller/dwc/pci-imx6.c
+++ b/drivers/pci/controller/dwc/pci-imx6.c
@@ -1225,10 +1225,6 @@ static int imx6_pcie_deassert_core_reset(struct imx6_pcie *imx6_pcie)
 	if (imx6_pcie->reset_gpiod) {
 		gpiod_set_value_cansleep(imx6_pcie->reset_gpiod,
 					!imx6_pcie->gpio_active_high);
-		msleep(100);
-		gpiod_set_value_cansleep(imx6_pcie->reset_gpiod,
-					imx6_pcie->gpio_active_high);
-		msleep(20);
 	}
 
 	switch (imx6_pcie->drvdata->variant) {
@@ -1400,6 +1396,15 @@ static int imx6_pcie_deassert_core_reset(struct imx6_pcie *imx6_pcie)
 	case IMX6Q_EP:
 		break;
 	}
+    /* Make sure we respect the PCIe specification and wait at least 100ms
+     * before talking to the device. At this point we already have the clock
+     * enabled.
+     */
+    if (imx6_pcie->reset_gpiod) {
+       msleep(100);
+       gpiod_set_value_cansleep(imx6_pcie->reset_gpiod,
+                       imx6_pcie->gpio_active_high);
+    }
 
 	return 0;
 
-- 
2.20.1

