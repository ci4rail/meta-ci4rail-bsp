From 1ccb13e13f18b9f9ec2f3cbabad9a1404ee528cc Mon Sep 17 00:00:00 2001
From: Kas User <kas@example.com>
Date: Thu, 20 Jan 2022 13:25:30 +0000
Subject: [PATCH 4/4] lan7431 fixed phy support

---
 drivers/net/ethernet/microchip/lan743x_main.c | 57 +++++++++++++++----
 drivers/net/ethernet/microchip/lan743x_main.h |  5 ++
 2 files changed, 52 insertions(+), 10 deletions(-)

diff --git a/drivers/net/ethernet/microchip/lan743x_main.c b/drivers/net/ethernet/microchip/lan743x_main.c
index 4bbdc53eaf3f3..2a47936d2d5f6 100644
--- a/drivers/net/ethernet/microchip/lan743x_main.c
+++ b/drivers/net/ethernet/microchip/lan743x_main.c
@@ -4,6 +4,7 @@
 #include <linux/module.h>
 #include <linux/pci.h>
 #include <linux/netdevice.h>
+#include <linux/phy_fixed.h>
 #include <linux/etherdevice.h>
 #include <linux/crc32.h>
 #include <linux/microchipphy.h>
@@ -12,6 +13,8 @@
 #include <linux/rtnetlink.h>
 #include <linux/iopoll.h>
 #include <linux/crc16.h>
+#include <linux/of_mdio.h>
+#include <linux/of_net.h>
 #include "lan743x_main.h"
 #include "lan743x_ethtool.h"
 
@@ -970,26 +973,59 @@ static void lan743x_phy_close(struct lan743x_adapter *adapter)
 
 	phy_stop(netdev->phydev);
 	phy_disconnect(netdev->phydev);
+
+	if( adapter->phy.is_fixed_phy){
+		fixed_phy_unregister(netdev->phydev);
+	}
 	netdev->phydev = NULL;
 }
 
 static int lan743x_phy_open(struct lan743x_adapter *adapter)
 {
+	struct net_device *netdev = adapter->netdev;
 	struct lan743x_phy *phy = &adapter->phy;
 	struct phy_device *phydev;
-	struct net_device *netdev;
 	int ret = -EIO;
 
-	netdev = adapter->netdev;
-	phydev = phy_find_first(adapter->mdiobus);
-	if (!phydev)
-		goto return_error;
+	phydev = of_phy_get_and_connect(netdev, adapter->pdev->dev.of_node,
+					lan743x_phy_link_status_change);
 
-	ret = phy_connect_direct(netdev, phydev,
-				 lan743x_phy_link_status_change,
-				 PHY_INTERFACE_MODE_GMII);
-	if (ret)
-		goto return_error;
+	if (!phydev) {
+		/* try internal phy */
+		phydev = phy_find_first(adapter->mdiobus);
+
+		if (phydev) {
+			ret = phy_connect_direct(netdev, phydev,
+						 lan743x_phy_link_status_change,
+						 PHY_INTERFACE_MODE_GMII);
+		} else {
+			if ((adapter->csr.id_rev & ID_REV_ID_MASK_) == ID_REV_ID_LAN7431_){
+
+				/* if still no phy found, assume 7431 is connected to RGMII without MDIO */
+				struct fixed_phy_status status = {
+					.link = 1,
+					.duplex = 1,
+					.speed = 1000,
+					.pause = 1,
+					.asym_pause = 1,
+				};
+
+				pr_debug("lan743x_phy_open: using fixed PHY\n");
+				phydev = fixed_phy_register(PHY_POLL, &status, NULL);
+				if (!phydev)
+					goto return_error;
+
+				phy->is_fixed_phy = 1;
+
+				ret = phy_connect_direct(netdev, phydev,
+							lan743x_phy_link_status_change,
+							PHY_INTERFACE_MODE_RGMII);
+			}
+		}
+
+		if (ret)
+			goto return_error;
+	}
 
 	/* MAC doesn't support 1000T Half */
 	phy_remove_link_mode(phydev, ETHTOOL_LINK_MODE_1000baseT_Half_BIT);
@@ -1007,6 +1043,7 @@ static int lan743x_phy_open(struct lan743x_adapter *adapter)
 	return ret;
 }
 
+
 static void lan743x_rfe_open(struct lan743x_adapter *adapter)
 {
 	lan743x_csr_write(adapter, RFE_RSS_CFG,
diff --git a/drivers/net/ethernet/microchip/lan743x_main.h b/drivers/net/ethernet/microchip/lan743x_main.h
index 1fbcef3910989..47b6a40132efc 100644
--- a/drivers/net/ethernet/microchip/lan743x_main.h
+++ b/drivers/net/ethernet/microchip/lan743x_main.h
@@ -104,10 +104,14 @@
 	((value << 0) & FCT_FLOW_CTL_ON_THRESHOLD_)
 
 #define MAC_CR				(0x100)
+#define MAC_CR_MII_EN_ BIT(19)
 #define MAC_CR_EEE_EN_			BIT(17)
 #define MAC_CR_ADD_			BIT(12)
 #define MAC_CR_ASD_			BIT(11)
 #define MAC_CR_CNTR_RST_		BIT(5)
+#define MAC_CR_DPX_ BIT(3)
+#define MAC_CR_CFG_H_ BIT(2)
+#define MAC_CR_CFG_L_ BIT(1)
 #define MAC_CR_RST_			BIT(0)
 
 #define MAC_RX				(0x104)
@@ -620,6 +624,7 @@ struct lan743x_intr {
 struct lan743x_phy {
 	bool	fc_autoneg;
 	u8	fc_request_control;
+	bool is_fixed_phy;
 };
 
 /* TX */
-- 
2.20.1

